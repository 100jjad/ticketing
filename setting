package com.example.ssoheyli.ticketing_newdesign;

import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.Paint;
import android.graphics.drawable.ShapeDrawable;
import android.graphics.drawable.shapes.OvalShape;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.support.constraint.ConstraintLayout;
import android.support.constraint.Placeholder;
import android.support.v4.content.ContextCompat;
import android.transition.TransitionManager;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.Toast;

import androidx.annotation.Nullable;

import com.example.ssoheyli.ticketing_newdesign.Helpfull.Config;
import com.example.ssoheyli.ticketing_newdesign.Helpfull.Constans;

import java.util.Locale;

public class Setting extends Activity
{
    LinearLayout fa_ll , en_ll;
    RadioButton fa_rb , en_rb;
    ImageView imv_back;
    ConstraintLayout ll1;
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
    Methods method;
    static int position=20;
    ConstraintLayout constraintLayout;
    ImageView imv_color1 , imv_color2 , imv_color3 , imv_color4 , imv_color5 , imv_color6 , imv_color7 , imv_color8 , imv_color9 , imv_color10 , imv_color11 , imv_color12 , imv_color13
            , imv_color14 , imv_color15 , imv_color16 , imv_color17 , imv_color18 , imv_color19 , imv_color20;
    static int i =0;
    static boolean flag = false;
    Placeholder placeholder;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setTheme(Constans.theme);
        setContentView(R.layout.temp);
        ll1 = findViewById(R.id.LL1);
        ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));
        constraintLayout = findViewById(R.id.cl_color);
        method = new Methods();
        fa_ll = findViewById(R.id.fa_language);
        en_ll = findViewById(R.id.en_language);

        check_theme();



        imv_back = findViewById(R.id.iv_back);
        imv_color1 = findViewById(R.id.iv_color1);
        imv_color2 = findViewById(R.id.iv_color2);
        imv_color3 = findViewById(R.id.iv_color3);
        imv_color4 = findViewById(R.id.iv_color4);
        imv_color5 = findViewById(R.id.iv_color5);
        imv_color6 = findViewById(R.id.iv_color6);
        imv_color7 = findViewById(R.id.iv_color7);
        imv_color8 = findViewById(R.id.iv_color8);
        imv_color9 = findViewById(R.id.iv_color9);
        imv_color10 = findViewById(R.id.iv_color10);
        imv_color11 = findViewById(R.id.iv_color11);
        imv_color12 = findViewById(R.id.iv_color12);
        imv_color13 = findViewById(R.id.iv_color13);
        imv_color14 = findViewById(R.id.iv_color14);
        imv_color15 = findViewById(R.id.iv_color15);
        imv_color16 = findViewById(R.id.iv_color16);
        imv_color17 = findViewById(R.id.iv_color17);
        imv_color18 = findViewById(R.id.iv_color18);
        imv_color19 = findViewById(R.id.iv_color19);
        imv_color20 = findViewById(R.id.iv_color20);

        fa_rb = findViewById(R.id.rb_fa);
        en_rb = findViewById(R.id.rb_en);


        placeholder = findViewById(R.id.placeholder);


        sharedPreferences = getSharedPreferences("setting" , MODE_PRIVATE);
        editor = sharedPreferences.edit();

        color_select();
        change_placeholder(position);



        imv_back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finish();
            }
        });


        String current_language = Config.get_Language(Setting.this);
        if(current_language.equals("persian"))
        {
            fa_rb.setChecked(true);
        }
        else
        {
            en_rb.setChecked(true);
        }

        fa_ll.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                Config.Set_Language(Setting.this , "persian");
                flag = true;
                Login.language_status = 1;

                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
                    updateResources(Setting.this, "fa");
                    recreate();
                }

                updateResourcesLegacy(Setting.this, "fa");
                recreate();

                fa_rb.setChecked(true);
                en_rb.setChecked(false);
            }
        });

        en_ll.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                Config.Set_Language(Setting.this , "english");
                flag = true;
                Login.language_status = 2;
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
                    updateResources(Setting.this, "en");
                    recreate();
                }

                updateResourcesLegacy(Setting.this, "en");
                recreate();
                en_rb.setChecked(true);
                fa_rb.setChecked(false);
            }
        });

    }


    @TargetApi(Build.VERSION_CODES.N)
    private static Context updateResources(Context context, String language) {
        Locale locale = new Locale(language);
        Locale.setDefault(locale);

        Configuration configuration = context.getResources().getConfiguration();
        configuration.setLocale(locale);

        return context.createConfigurationContext(configuration);
    }

    @SuppressWarnings("deprecation")
    private static Context updateResourcesLegacy(Context context, String language) {
        Locale locale = new Locale(language);
        Locale.setDefault(locale);

        Resources resources = context.getResources();

        Configuration configuration = resources.getConfiguration();
        configuration.locale = locale;

        resources.updateConfiguration(configuration, resources.getDisplayMetrics());

        return context;
    }


//
//    @Override
//    public boolean onOptionsItemSelected(MenuItem item)
//    {
//        switch (item.getItemId())
//        {
//            case android.R.id.home:
//                onBackPressed();
//                break;
//        }
//        return super.onOptionsItemSelected(item);
//    }
//
//    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
////    private void colorpicker()
////    {
////        ShapeDrawable d = new ShapeDrawable(new OvalShape());
////        d.setBounds(58 , 58 , 58 , 58);
////        d.getPaint().setStyle(Paint.Style.FILL);
////        d.getPaint().setColor(Constans.colorprimary);
////
//////        button.setBackground(d);
////    }


    public void color_select()
    {
        imv_color1.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color1.getId());
                Constans.colorprimary = R.color.primary_theme1;
                Constans.colorprimary_dark = R.color.darkprimary_theme1;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme1;
                Constans.bg_item_menu1 = R.drawable.bg_menu_item1_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item1_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item1_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key1;
                Constans.bg_key = R.drawable.bg_ripple_key1_2;
                position =1;

                Constans.theme = R.style.AppTheme1;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));


                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);


            }
        });

        imv_color2.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color2.getId());
                Constans.colorprimary = R.color.primary_theme2;
                Constans.colorprimary_dark = R.color.darkprimary_theme2;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme2;
                Constans.bg_item_menu1 = R.drawable.bg_menu_item2_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item2_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item2_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key2;
                Constans.bg_key = R.drawable.bg_ripple_key2_2;
                position =2;

                Constans.theme = R.style.AppTheme2;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color3.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color3.getId());

                Constans.colorprimary = R.color.primary_theme3;
                Constans.colorprimary_dark = R.color.darkprimary_theme3;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme3;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item3_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item3_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item3_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key3;
                Constans.bg_key = R.drawable.bg_ripple_key3_2;
                position =3;

                Constans.theme = R.style.AppTheme3;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color4.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color4.getId());

                Constans.colorprimary = R.color.primary_theme4;
                Constans.colorprimary_dark = R.color.darkprimary_theme4;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme4;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item4_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item4_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item4_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key4;
                Constans.bg_key = R.drawable.bg_ripple_key4_2;
                position =4;

                Constans.theme = R.style.AppTheme4;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color5.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color5.getId());

                Constans.colorprimary = R.color.primary_theme5;
                Constans.colorprimary_dark = R.color.darkprimary_theme5;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme5;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item5_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item5_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item5_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key5;
                Constans.bg_key = R.drawable.bg_ripple_key5_2;
                position =5;

                Constans.theme = R.style.AppTheme5;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color6.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color6.getId());

                Constans.colorprimary = R.color.primary_theme6;
                Constans.colorprimary_dark = R.color.darkprimary_theme6;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme6;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item6_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item6_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item6_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key6;
                Constans.bg_key = R.drawable.bg_ripple_key6_2;
                position =6;

                Constans.theme = R.style.AppTheme6;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color7.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color7.getId());

                Constans.colorprimary = R.color.primary_theme7;
                Constans.colorprimary_dark = R.color.darkprimary_theme7;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme7;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item7_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item7_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item7_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key7;
                Constans.bg_key = R.drawable.bg_ripple_key7_2;
                position =7;

                Constans.theme = R.style.AppTheme7;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color8.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color8.getId());

                Constans.colorprimary = R.color.primary_theme19;
                Constans.colorprimary_dark = R.color.darkprimary_theme19;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme19;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item8_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item8_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item8_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key19;
                Constans.bg_key = R.drawable.bg_ripple_key19_2;
                position =8;

                Constans.theme = R.style.AppTheme8;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color9.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color9.getId());

                Constans.colorprimary = R.color.primary_theme8;
                Constans.colorprimary_dark = R.color.darkprimary_theme8;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme8;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item9_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item9_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item9_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key8;
                Constans.bg_key = R.drawable.bg_ripple_key8_2;
                position =9;

                Constans.theme = R.style.AppTheme9;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color10.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color10.getId());

                Constans.colorprimary = R.color.primary_theme9;
                Constans.colorprimary_dark = R.color.darkprimary_theme9;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme9;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item10_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item10_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item10_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key9;
                Constans.bg_key = R.drawable.bg_ripple_key9_2;
                position =10;

                Constans.theme = R.style.AppTheme10;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color11.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color11.getId());

                Constans.colorprimary = R.color.primary_theme10;
                Constans.colorprimary_dark = R.color.darkprimary_theme10;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme10;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item11_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item11_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item11_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key10;
                Constans.bg_key = R.drawable.bg_ripple_key10_2;
                position =11;

                Constans.theme = R.style.AppTheme11;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color12.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color12.getId());

                Constans.colorprimary = R.color.primary_theme11;
                Constans.colorprimary_dark = R.color.darkprimary_theme11;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme11;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item12_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item12_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item12_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key11;
                Constans.bg_key = R.drawable.bg_ripple_key11_2;
                position =12;

                Constans.theme = R.style.AppTheme12;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color13.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color13.getId());

                Constans.colorprimary = R.color.primary_theme12;
                Constans.colorprimary_dark = R.color.darkprimary_theme12;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme12;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item13_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item13_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item13_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key12;
                Constans.bg_key = R.drawable.bg_ripple_key12_2;
                position =13;

                Constans.theme = R.style.AppTheme13;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color14.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color14.getId());

                Constans.colorprimary = R.color.primary_theme13;
                Constans.colorprimary_dark = R.color.darkprimary_theme13;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme13;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item14_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item14_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item14_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key13;
                Constans.bg_key = R.drawable.bg_ripple_key13_2;
                position =14;

                Constans.theme = R.style.AppTheme14;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color15.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color15.getId());

                Constans.colorprimary = R.color.primary_theme14;
                Constans.colorprimary_dark = R.color.darkprimary_theme14;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme14;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item15_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item15_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item15_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key14;
                Constans.bg_key = R.drawable.bg_ripple_key14_2;
                position =15;

                Constans.theme = R.style.AppTheme15;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color16.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color16.getId());

                Constans.colorprimary = R.color.primary_theme15;
                Constans.colorprimary_dark = R.color.darkprimary_theme15;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme15;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item16_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item16_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item16_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key15;
                Constans.bg_key = R.drawable.bg_ripple_key15_2;
                position =16;

                Constans.theme = R.style.AppTheme16;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color17.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color17.getId());

                Constans.colorprimary = R.color.primary_theme16;
                Constans.colorprimary_dark = R.color.darkprimary_theme16;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme16;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item17_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item17_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item17_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key16;
                Constans.bg_key = R.drawable.bg_ripple_key16_2;
                position =17;

                Constans.theme = R.style.AppTheme17;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color18.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color18.getId());

                Constans.colorprimary = R.color.primary_theme17;
                Constans.colorprimary_dark = R.color.darkprimary_theme17;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme17;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item18_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item18_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item18_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key17;
                Constans.bg_key = R.drawable.bg_ripple_key17_2;
                position =18;

                Constans.theme = R.style.AppTheme18;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color19.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color19.getId());

                Constans.colorprimary = R.color.primary_theme18;
                Constans.colorprimary_dark = R.color.darkprimary_theme18;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.Accent_theme18;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item19_1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item19_2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item19_3;
                Constans.bg_ripple_key = R.drawable.bg_ripple_key18;
                Constans.bg_key = R.drawable.bg_ripple_key18_2;
                position =19;

                Constans.theme = R.style.AppTheme19;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));

                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });

        imv_color20.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View view)
            {
                flag = true;
                TransitionManager.beginDelayedTransition(constraintLayout);
                placeholder.setContentId(imv_color20.getId());

                Constans.colorprimary = R.color.colorPrimary;
                Constans.colorprimary_dark = R.color.colorPrimaryDark;
                Constans.textcolor = R.color.white;
                Constans.colorAccent = R.color.colorAccent;

                Constans.bg_item_menu1 = R.drawable.bg_menu_item1;
                Constans.bg_item_menu2 = R.drawable.bg_menu_item2;
                Constans.bg_item_menu3 = R.drawable.bg_menu_item3;
                Constans.bg_ripple_key = R.drawable.ripple_keyboard;
                Constans.bg_key = R.drawable.material_keyboard;
                position =20;
                Constans.theme = R.style.AppTheme;

                Constans.apply_data(Setting.this);

                ll1.setBackgroundColor(ContextCompat.getColor(Setting.this , Constans.colorprimary));
                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run()
                    {
                        recreate();
                    }
                }, 400);

            }
        });
    }

    public void change_placeholder(int number)
    {
        if(number ==1)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color1.getId());
        }
        else if(number ==2)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color2.getId());
        }
        else if(number ==3)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color3.getId());
        }
        else if(number ==4)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color4.getId());
        }
        else if(number ==5)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color5.getId());
        }
        else if(number ==6)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color6.getId());
        }
        else if(number ==7)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color7.getId());
        }
        else if(number ==8)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color8.getId());
        }
        else if(number ==9)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color9.getId());
        }
        else if(number ==10)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color10.getId());
        }
        else if(number ==11)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color11.getId());
        }
        else if(number ==12)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color12.getId());
        }
        else if(number ==13)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color13.getId());
        }
        else if(number ==14)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color14.getId());
        }
        else if(number ==15)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color15.getId());
        }
        else if(number ==16)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color16.getId());
        }
        else if(number ==17)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color17.getId());
        }
        else if(number ==18)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color18.getId());
        }
        else if(number ==19)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color19.getId());
        }
        else if(number ==20)
        {
            TransitionManager.beginDelayedTransition(constraintLayout);
            placeholder.setContentId(imv_color20.getId());
        }
    }



    public void check_theme()
    {
        Constans.colorprimary = Config.get_primary_color(Setting.this);

        if(Constans.colorprimary == R.color.primary_theme1)
        {
            position = 1;
        }
        if(Constans.colorprimary == R.color.primary_theme2)
        {
            position = 2;
        }
        if(Constans.colorprimary == R.color.primary_theme3)
        {
            position = 3;
        }
        if(Constans.colorprimary == R.color.primary_theme4)
        {
            position = 4;
        }
        if(Constans.colorprimary == R.color.primary_theme5)
        {
            position = 5;
        }
        if(Constans.colorprimary == R.color.primary_theme6)
        {
            position = 6;
        }
        if(Constans.colorprimary == R.color.primary_theme7)
        {
            position = 7;
        }
        if(Constans.colorprimary == R.color.primary_theme8)
        {
            position = 9;
        }
        if(Constans.colorprimary == R.color.primary_theme9)
        {
            position = 10;
        }
        if(Constans.colorprimary == R.color.primary_theme10)
        {
            position = 11;
        }
        if(Constans.colorprimary == R.color.primary_theme11)
        {
            position = 12;
        }
        if(Constans.colorprimary == R.color.primary_theme12)
        {
            position = 13;
        }
        if(Constans.colorprimary == R.color.primary_theme13)
        {
            position = 14;
        }
        if(Constans.colorprimary == R.color.primary_theme14)
        {
            position = 15;
        }
        if(Constans.colorprimary == R.color.primary_theme15)
        {
            position = 16;
        }
        if(Constans.colorprimary == R.color.primary_theme16)
        {
            position = 17;
        }
        if(Constans.colorprimary == R.color.primary_theme17)
        {
            position = 18;
        }
        if(Constans.colorprimary == R.color.primary_theme18)
        {
            position = 19;
        }
        if(Constans.colorprimary == R.color.primary_theme19)
        {
            position = 8;
        }
        if(Constans.colorprimary == R.color.colorPrimary)
        {
            position = 20;
        }

    }
}
