package com.example.ssoheyli.ticketing_newdesign.Financial;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;


import com.agrawalsuneet.dotsloader.loaders.LazyLoader;
import com.example.ssoheyli.ticketing_newdesign.Helpfull.API;
import com.example.ssoheyli.ticketing_newdesign.Helpfull.Config;
import com.example.ssoheyli.ticketing_newdesign.Increas_Amount;
import com.example.ssoheyli.ticketing_newdesign.Model.Model_Get_Payment_Inventory;
import com.example.ssoheyli.ticketing_newdesign.Model.Model_Get_invoice_detail_list;
import com.example.ssoheyli.ticketing_newdesign.Model.Model_Post_Payment_Inventory;
import com.example.ssoheyli.ticketing_newdesign.Model.Model_Post_invoice_detail_list;
import com.example.ssoheyli.ticketing_newdesign.Model.Pre_invoce_detail_list_Model;
import com.example.ssoheyli.ticketing_newdesign.R;

import java.util.ArrayList;
import java.util.List;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;


/**
 * Created by s.soheyli on 11/6/2018.
 */

public class Pre_InvoiceDetailList extends Activity
{
    RecyclerView rcv;
    Pre_invoicedetail_Adapter update = new Pre_invoicedetail_Adapter(this);
    LazyLoader lp;
    ImageView imvback;
    TextView txvusername;
    int total_amount2=0;
    int amount =0;
    static int invoice_id = 0;
    Button btn_increas_amount , btn_payment_by_amount , btn_cancel_invoice , btn_online_payment;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.pre_invoicelistdetail);

        lp = findViewById(R.id.dl);
        imvback = findViewById(R.id.ivback);
        txvusername = findViewById(R.id.tvusername);

        txvusername.setText(Config.getusername(getApplicationContext()));
        imvback.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        btn_increas_amount = findViewById(R.id.bn_increas_amount);
        btn_payment_by_amount = findViewById(R.id.bn_payment_by_amount);
        btn_cancel_invoice = findViewById(R.id.bn_cancel_invoice);
        btn_online_payment = findViewById(R.id.bn_online_payment);

        Typeface atf = Typeface.createFromAsset(getAssets(), "roboto-regular.ttf");
        btn_increas_amount.setTypeface(atf);
        btn_payment_by_amount.setTypeface(atf);
        btn_cancel_invoice.setTypeface(atf);
        btn_online_payment.setTypeface(atf);

        invoice_id = Invoice_List.id;
        btn_cancel_invoice.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                cancel_Invoice();
            }
        });

        btn_payment_by_amount.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                if(check_Amount()>0)
                {
                    payment_Inventory();
                }
                else
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.preinvoice_notenough_credit), Toast.LENGTH_SHORT).show();
                }
            }
        });

        btn_online_payment.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                Intent intent = new Intent(Pre_InvoiceDetailList.this , Invoice_Bank_Payment.class);
                startActivity(intent);
            }
        });


        btn_increas_amount.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                Intent intent = new Intent(Pre_InvoiceDetailList.this , Increas_Amount.class);
                startActivity(intent);
            }
        });


        rcv = findViewById(R.id.rv1);
        get_detail_invoice_list();

    }



    public void get_detail_invoice_list()
    {
        Retrofit retrofit2 = new Retrofit.Builder().baseUrl(Config.getBaseUrl()).addConverterFactory(GsonConverterFactory.create()).build();
        API api = retrofit2.create(API.class);
        Model_Post_invoice_detail_list model_post = new Model_Post_invoice_detail_list();
        model_post.setInvoice_id(Invoice_List.id);
        model_post.setToken(Config.getToken(getApplicationContext()));
        Call<List<Model_Get_invoice_detail_list>> model = api.get_invoice_detail_list(model_post);
        model.enqueue(new Callback<List<Model_Get_invoice_detail_list>>()
        {
            @Override
            public void onResponse(Call<List<Model_Get_invoice_detail_list>> call, Response<List<Model_Get_invoice_detail_list>> response)
            {
                lp.setVisibility(View.INVISIBLE);
                if (response.isSuccessful())
                {
                    List<Model_Get_invoice_detail_list> list;
                    list = response.body();
                    String price ="" , discount = "" , total_amount = "";

                    ArrayList<Pre_invoce_detail_list_Model> temp;
                    temp = new ArrayList<>();
                    for (int i=0 ; i<list.size() ; i++)
                    {
                        price = edit_price(""+list.get(i).getPrice());
                        discount = edit_price(""+list.get(i).getDiscount());
                        total_amount = edit_price(""+list.get(i).getTotal_amount());
                        Pre_invoce_detail_list_Model enrty = new Pre_invoce_detail_list_Model(list.get(i).getName() , price , discount , list.get(i).getNumber() , total_amount);
                        temp.add(enrty);
                    }

                    update.entries = new ArrayList<>(temp);
                    rcv = (RecyclerView)findViewById(R.id.rv1);
                    rcv.setLayoutManager(new StaggeredGridLayoutManager(1 , StaggeredGridLayoutManager.VERTICAL));
                    update.notifyDataSetChanged();
                    rcv.setAdapter(update);
                }
                else
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1041), Toast.LENGTH_SHORT).show();

                }
            }

            @Override
            public void onFailure(Call<List<Model_Get_invoice_detail_list>> call, Throwable t)
            {
                lp.setVisibility(View.INVISIBLE);
                Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1042), Toast.LENGTH_SHORT).show();
            }
        });


    }

    public void payment_Inventory()
    {
        Retrofit retrofit2 = new Retrofit.Builder().baseUrl(Config.getBaseUrl()).addConverterFactory(GsonConverterFactory.create()).build();
        API api = retrofit2.create(API.class);
        Model_Post_Payment_Inventory model_post = new Model_Post_Payment_Inventory();
        model_post.setInvoice_id(Invoice_List.id);
        model_post.setToken(Config.getToken(getApplicationContext()));
        Call<Model_Get_Payment_Inventory> model = api.payment_Inventory(model_post);
        model.enqueue(new Callback<Model_Get_Payment_Inventory>()
        {
            @Override
            public void onResponse(Call<Model_Get_Payment_Inventory> call, Response<Model_Get_Payment_Inventory> response)
            {
                if(response.isSuccessful())
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, ""+response.body().getMessage(), Toast.LENGTH_SHORT).show();
                    Intent intent = new Intent(Pre_InvoiceDetailList.this , Factor_List.class);
                    startActivity(intent);
                }
                else
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1561), Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onFailure(Call<Model_Get_Payment_Inventory> call, Throwable t)
            {
                Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1562), Toast.LENGTH_SHORT).show();
            }
        });

    }

    public void cancel_Invoice()
    {
        Retrofit retrofit2 = new Retrofit.Builder().baseUrl(Config.getBaseUrl()).addConverterFactory(GsonConverterFactory.create()).build();
        API api = retrofit2.create(API.class);
        Model_Post_Payment_Inventory model_post = new Model_Post_Payment_Inventory();
        model_post.setInvoice_id(Invoice_List.id);
        model_post.setToken(Config.getToken(getApplicationContext()));
        Call<Model_Get_Payment_Inventory> model = api.cancel_invoice(model_post);
        model.enqueue(new Callback<Model_Get_Payment_Inventory>()
        {
            @Override
            public void onResponse(Call<Model_Get_Payment_Inventory> call, Response<Model_Get_Payment_Inventory> response)
            {
                if(response.isSuccessful())
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, ""+response.body().getMessage(), Toast.LENGTH_SHORT).show();
                    finish();
                }
                else
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1571), Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onFailure(Call<Model_Get_Payment_Inventory> call, Throwable t)
            {
                Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1572), Toast.LENGTH_SHORT).show();
            }
        });
    }

    public int check_Amount()
    {
        Retrofit retrofit2 = new Retrofit.Builder().baseUrl(Config.getBaseUrl()).addConverterFactory(GsonConverterFactory.create()).build();
        API api = retrofit2.create(API.class);
        Model_Post_Payment_Inventory model_post = new Model_Post_Payment_Inventory();
        model_post.setInvoice_id(Invoice_List.id);
        model_post.setToken(Config.getToken(getApplicationContext()));
        Call<Model_Get_Payment_Inventory> model = api.check_Inventory(model_post);
        model.enqueue(new Callback<Model_Get_Payment_Inventory>()
        {
            @Override
            public void onResponse(Call<Model_Get_Payment_Inventory> call, Response<Model_Get_Payment_Inventory> response)
            {
                if(response.isSuccessful())
                {
                    amount = response.body().getAmount();
                }
                else
                {
                    Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1571), Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onFailure(Call<Model_Get_Payment_Inventory> call, Throwable t)
            {
                Toast.makeText(Pre_InvoiceDetailList.this, getString(R.string.server_1572), Toast.LENGTH_SHORT).show();
            }
        });
        return amount;
    }


    public String edit_price(String price)
    {
        int lengh = price.length();
        StringBuilder price2 = new StringBuilder(price);
        while (lengh>3)
        {
            lengh = lengh-3;
            price2.insert(lengh , ",");
        }

        return price2.toString();
    }
}
