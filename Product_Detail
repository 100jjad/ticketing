package com.example.ssoheyli.ticketing_newdesign;

import android.graphics.Typeface;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;


import com.example.ssoheyli.ticketing_newdesign.Helpfull.API;
import com.example.ssoheyli.ticketing_newdesign.Helpfull.Config;
import com.example.ssoheyli.ticketing_newdesign.Model.Model_Get_AddtoBasekt;
import com.example.ssoheyli.ticketing_newdesign.Model.Model_Post_AddtoBascket;
import com.jaredrummler.materialspinner.MaterialSpinner;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;


;import static com.example.ssoheyli.ticketing_newdesign.ProductList.discount;
import static com.example.ssoheyli.ticketing_newdesign.ProductList.name;
import static com.example.ssoheyli.ticketing_newdesign.ProductList.price;

/**
 * Created by s.soheyli on 11/3/2018.
 */

public class Product_Detail extends AppCompatActivity
{
    TextView txvname , txvprice , txvdiscount , txvnumber , txv1 , txv2 , txv3 , txv4;
    ImageView imv1;
    Button btn_buy;
    MaterialSpinner sprnumber;
    Animation btnanim;
    int number_Product=1;
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.product_detail_material);
        btnanim = AnimationUtils.loadAnimation(this, R.anim.button_anim1);
        txvname = findViewById(R.id.tvname);
        txvprice = findViewById(R.id.tvprice);
        txvdiscount = findViewById(R.id.tvdiscount);
        txvnumber = findViewById(R.id.tvnumber_product);
        txv1 = findViewById(R.id.tv1);
        txv2 = findViewById(R.id.tv2);
        txv3 = findViewById(R.id.tv3);
        txv4 = findViewById(R.id.tv4);
        btn_buy = findViewById(R.id.bnchoos);
        imv1 = findViewById(R.id.ivproduct);
        sprnumber = findViewById(R.id.spnumber);
        final String [] num = {"1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , "10"};
        txvname.setText(name);
        String current_price = edit_price(price);
        String current_discount = edit_price(discount);
        txvprice.setText(current_price);
        txvdiscount.setText(current_discount);
        txvnumber.setText(ProductList.number);

        sprnumber.setItems("1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , "10");
        imv1.setImageBitmap(ProductList.image);

        sprnumber.setOnItemSelectedListener(new MaterialSpinner.OnItemSelectedListener() {
            @Override
            public void onItemSelected(MaterialSpinner view, int position, long id, Object item) {
                number_Product = position;
            }
        });

        Toolbar toolbar = findViewById(R.id.toolbar);

        setSupportActionBar(toolbar);
        if (getSupportActionBar()!=null){
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
            getSupportActionBar().setDisplayShowHomeEnabled(true);
        }

        toolbar.setTitleTextColor(ContextCompat.getColor(this , R.color.black));
        //ActionBar actionBar = getSupportActionBar();
        //actionBar.setDisplayHomeAsUpEnabled(true);
        //actionBar.setHomeButtonEnabled(true);

        toolbar.setTitle("  "+name);
        toolbar.setTitleTextColor(getResources().getColor(R.color.black));


        Typeface atf = Typeface.createFromAsset(getAssets(), "irsans.ttf");
        txvname.setTypeface(atf);
        txvprice.setTypeface(atf);
        txvdiscount.setTypeface(atf);
        txvnumber.setTypeface(atf);
        txv1.setTypeface(atf);
        txv2.setTypeface(atf);
        txv3.setTypeface(atf);
        txv4.setTypeface(atf);
        btn_buy.setTypeface(atf);

        btn_buy.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                btn_buy.startAnimation(btnanim);
                Retrofit retrofit2 = new Retrofit.Builder().baseUrl(Config.getBaseUrl()).addConverterFactory(GsonConverterFactory.create()).build();
                API myApi2 = retrofit2.create(API.class);
                Model_Post_AddtoBascket model_post =new Model_Post_AddtoBascket();
                model_post.setNumber(number_Product+1);
                model_post.setProductid(ProductList.product_id);
                model_post.setToken(Config.getToken(Product_Detail.this));
                Call<Model_Get_AddtoBasekt> model = myApi2.Add_toBasket(model_post);
                model.enqueue(new Callback<Model_Get_AddtoBasekt>() {
                    @Override
                    public void onResponse(Call<Model_Get_AddtoBasekt> call, Response<Model_Get_AddtoBasekt> response)
                    {
                        if(response.isSuccessful())
                        {
                            int res = response.body().getResult();
                            if(res == -1)
                            {
                                Toast.makeText(Product_Detail.this, "تعداد محصول را به صورت صحیح وارد کنید", Toast.LENGTH_SHORT).show();
                            }
                            else if (res ==-2)
                            {
                                Toast.makeText(Product_Detail.this, "قیمت محصول نامعتبر است", Toast.LENGTH_SHORT).show();

                            }

                            else if (res ==-3)
                            {
                                Toast.makeText(Product_Detail.this, "خطا از سمت سرور", Toast.LENGTH_SHORT).show();

                            }
                            else if(res> 0 || res == 0)
                            {
                                Toast.makeText(Product_Detail.this, "کالا به سبد خرید افزوده شد", Toast.LENGTH_SHORT).show();
                            }
                            else if(res == -44)
                            {
                                Toast.makeText(Product_Detail.this, "توکن نامعتبر است", Toast.LENGTH_SHORT).show();
                            }
                        }
                        else
                        {
                            Toast.makeText(Product_Detail.this, "خطا از سمت سرور", Toast.LENGTH_SHORT).show();
                        }
                    }

                    @Override
                    public void onFailure(Call<Model_Get_AddtoBasekt> call, Throwable t)
                    {
                        Toast.makeText(Product_Detail.this, "خطا از سمت سرور", Toast.LENGTH_SHORT).show();
                    }
                });

            }
        });

    }

    public String edit_price(String price)
    {
        int lengh = price.length();
        StringBuilder price2 = new StringBuilder(price);
        while (lengh>3)
        {
            lengh = lengh-3;
            price2.insert(lengh , ",");
        }

        return price2.toString();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // handle arrow click here
        if (item.getItemId() == android.R.id.home) {
            finish(); // close this activity and return to preview activity (if there is any)
        }

        return super.onOptionsItemSelected(item);
    }
}
